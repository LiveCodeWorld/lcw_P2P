[{"created":"2025-01-01T00:00:00.000Z","text":"A module to display and interact with TiddlyWiki. We use this module to create a [[Stack Runner]] for [[Guides]].","title":"About","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"This is the default behavior for the [[TiddlyWiki Module]]. It aims to be as minimal as possible and provide the core functionaily needed to run TiddlyWiki in a single Livecode [[Browser Widget]]. It currently contains the following handlers:\n\n# Working on\n- [[on browserUnhandledLoadRequest]]\n- [[on javascript_Result]]\n\n# Tidder | Props\n- [[getprop tiddler_Array]]\n- [[getprop tiddler_Visible]]\n- [[setprop tiddler_Visible]]\n- [[getprop tiddler_Text]]\n- [[setprop tiddler_Text]]\n- [[getprop tiddler_IsShowing]]\n- [[setprop show_Tiddlers]]\n- [[getprop tiddler_Exists]]]]\n\n# Tiddler | Utils\n- [[setprop show_Tiddler]]\n- [[setprop hide_Tiddler]]\n- [[setprop prepend_Tiddler]]\n- [[setprop append_Tiddler]]\n- [[setprop delete_Tiddler]]\n\n# Tiddly | Props\n- [[getprop tiddly_HTML]]\n- [[getprop tiddly_Layout]]\n- [[setprop tiddly_Layout]]\n- [[getprop tiddly_Title]]\n- [[setprop tiddly_Title]]\n- [[getprop tiddly_Tags]]\n- [[getprop tiddly_ListTitles]]\n- [[getprop tiddly_StoryTitles]]\n- [[getprop tiddly_Data]]\n- [[getprop tiddly_JSON]]\n- [[getprop tiddlyWiki_JSON]]\n\n# Browser | Props\n- [[getprop browser_HTML]]\n- [[getprop browser_URL]]\n- [[setprop browser_URL]]\n- [[getprop browser_File]]\n- [[setprop browser_File]]\n- [[setprop browser_Navigate]]\n\n# Events | browser\n- [[on browserDocumentLoadBegin]]\n- [[on browserDocumentLoadComplete]]\n- [[on browserDocumentLoadFailed]]\n- [[on browserFrameDocumentLoadBegin]]\n- [[on browserFrameDocumentLoadComplete]]\n- [[on browserFrameDocumentLoadFailed]]\n- [[on browserNavigateBegin]]\n- [[on browserNavigateFailed]]\n\n# Private\n- [[PC _Normalize]]\n- [[PC _NormalizeTitle]]\n- [[PF _WaitJavascriptResult]]\n- [[PF _GetJavascriptResult]]\n- [[PC _SaveText]]","title":"behavior_TiddlyWiki","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"title":"behavior_ViewTiddlyWiki","text":"- [[on browserUnhandledLoadRequest]]\n- [[on javascript_Result|on javascript_Result]]\n- [[getprop tiddly_HTML|getprop tiddly_HTML]]\n- [[getprop tiddler_Array|getprop tiddler_Array]]\n- [[getprop tiddly_Layout|getprop tiddly_Layout]]\n- [[setprop tiddly_Layout|setprop tiddly_Layout]]\n- [[getprop tiddler_Visible|getprop tiddler_Visible]]\n- [[setprop tiddler_Visible|setprop tiddler_Visible]]\n- [[setprop show_Tiddler|setprop show_Tiddler]]\n- [[setprop hide_Tiddler|setprop hide_Tiddler]]\n- [[getprop browser_HTML|getprop browser_HTML]]\n- [[getprop browser_URL|getprop browser_URL]]\n- [[setprop browser_URL|setprop browser_URL]]\n- [[getprop browser_File|getprop browser_File]]\n- [[setprop browser_File|setprop browser_File]]\n- [[setprop browser_Navigate|setprop browser_Navigate]]\n- [[getprop tiddler_Text|getprop tiddler_Text]]\n- [[setprop tiddler_Text|setprop tiddler_Text]]\n- [[getprop tiddler_BulletMarkdown|getprop tiddler_BulletMarkdown]]\n- [[setprop tiddler_Bullets|setprop tiddler_Bullets]]\n- [[setprop tiddler_Markdown|setprop tiddler_Markdown]]\n- [[setprop tiddler_RawMarkdown|setprop tiddler_RawMarkdown]]\n- [[private function _Tiddlerbullets|private function _Tiddlerbullets]]\n- [[private command _Normalize|private command _Normalize]]\n- [[private command _NormalizeEntities|private command _NormalizeEntities]]\n- [[getprop tiddler_IsShowing|getprop tiddler_IsShowing]]\n- [[setprop show_Tiddlers|setprop show_Tiddlers]]\n- [[getprop tiddly_Title|getprop tiddly_Title]]\n- [[setprop tiddly_Title|setprop tiddly_Title]]\n- [[getprop tiddly_Tags|getprop tiddly_Tags]]\n- [[getprop tiddly_ListTitles|getprop tiddly_ListTitles]]\n- [[getprop tiddly_StoryTitles|getprop tiddly_StoryTitles]]\n- [[getprop tiddly_Data|getprop tiddly_Data]]\n- [[getprop tiddly_JSON|getprop tiddly_JSON]]\n- [[setprop prepend_Tiddler|setprop prepend_Tiddler]]\n- [[setprop append_Tiddler|setprop append_Tiddler]]\n- [[setprop delete_Tiddler|setprop delete_Tiddler]]\n- [[getprop tiddlyWiki_JSON|getprop tiddlyWiki_JSON]]\n- [[getprop tiddler_Exists|getprop tiddler_Exists]]\n- [[on browserDocumentLoadBegin]]\n- [[on browserDocumentLoadComplete]]\n- [[on browserDocumentLoadFailed]]\n- [[on browserFrameDocumentLoadBegin]]\n- [[on browserFrameDocumentLoadComplete]]\n- [[on browserFrameDocumentLoadFailed]]\n- [[on browserNavigateBegin]]\n- [[on browserNavigateFailed]]\n- [[private command _NormalizeTitle|private command _NormalizeTitle]]\n- [[private function _WaitJavascriptResult|private function _WaitJavascriptResult]]\n- [[private function _GetJavascriptResult|private function _GetJavascriptResult]]\n- [[private command _SaveText|private command _SaveText]]\n","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"Tiddlers - just like most markup - have a content-type. In TiddlyWiki you can see the `Type: content type` field. By default TiddlyWiki uses `text/vnd.tiddlywiki` as its markup, but we prefer `text/markdown` or [[Markdown]].\n\n! Todo\nWe like the idea of creating bi-directional translation from basic forms of wiki markup. For that we have:\n# Hand rolled scripts\n# [[Pandoc]]","title":"Content Type","modified":"2025-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki"},{"created":"2025-01-01T00:00:00.000Z","text":"There are several ways to create a new tiddler. The one of interest to us here is creating it form external scripts. Here are some examples using LiveCode:\n\n* [[setprop tiddler_Text]]\n* [[setprop tiddler_Markdown]]\n* [[setprop tiddler_BulletMarkdown]]\n* [[setprop tiddler_Bullets]]\n* [[setprop tiddler_RawMarkdown]]\n","title":"Create Tiddler","modified":"2025-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki"},{"created":"2015-01-01T00:00:00.000Z","text":"A plugin that allows to encrypt your tiddlers individually Danielo Rodriguez.\n\n{{!!url}}\n\n<<<\nAdvantages:\n\n* You can specify a different password for each tiddler if you want.\n* You don't have to encrypt your whole wiky.\n* If you forget your password, you only lose a tiddler.\n* It's possible to edit the tiddler content , tags and fields except the encrypt field after encryption.\n* [...]\n<<<\n","title":"Encrypt single tiddler","modified":"2025-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki","url":"http://danielorodriguez.com/TW5-EncryptTiddlerPlugin/"},{"created":"2025-01-01T00:00:00.000Z","text":"We require the saving of data to be robust. Asynchronous calling of javascript with messages depends on a robust handling of this in Livecode. Livecodes implementation of this is recent and not mature. In addition the passing of mulitline messages in Livecode is not easy to handle. There is no reason to think this will be the case for Javascript messaging. In short we should try to limit the need for passing large amounts of data back and forth between Livecode and Javascript.\n\nIt seems that the saving may have been unreliable as it requires the javascripthandlers to be correclty set in order to receive callbacks from javascript. We need to ensure these are properly set on the browser widget by the code.","title":"Flaky Saving","modified":"2025-01-01T00:00:00.000Z"},{"title":"Global   TiddlyWiki   Dev   Menu","text":"- [[getprop menu_Target|getprop menu_Target]]\n- [[getprop menu_CheckTarget|getprop menu_CheckTarget]]\n- [[on menu_Behavior|on menu_Behavior]]\n---\n- [[on menu_MenuEdit|on menu_MenuEdit]]\n","type":"text/markdown"},{"title":"Global   TiddlyWiki   Menu","text":"- [[getprop menu_Target|getprop menu_Target]]\n- [[getprop menu_CheckTarget|getprop menu_CheckTarget]]\n- [[on menu_LoadGettingStarted|on menu_LoadGettingStarted]]\n- [[on menu_TiddlyWiki|on menu_TiddlyWiki]]\n- [[getprop tiddlywiki_Param|getprop tiddlywiki_Param]]\n- [[getprop tiddlywiki_Params|getprop tiddlywiki_Params]]\n---\n- [[on menu_ShowTiddler|on menu_ShowTiddler]]\n- [[getprop disabled_ShowTiddler|getprop disabled_ShowTiddler]]\n- [[getprop showTiddler_Param|getprop showTiddler_Param]]\n- [[getprop showTiddler_Params|getprop showTiddler_Params]]\n- [[on menu_DeleteTiddler|on menu_DeleteTiddler]]\n- [[getprop deleteTiddler_Params|getprop deleteTiddler_Params]]\n- [[on menu_DisplayModuleText|on menu_DisplayModuleText]]\n- [[on menu_CreateModuleTiddler|on menu_CreateModuleTiddler]]\n---\n- [[on menu_AddBrowserBehavior|on menu_AddBrowserBehavior]]\n- [[getprop checked_AddBrowserBehavior|getprop checked_AddBrowserBehavior]]\n---\n- [[on menu_TiddlerText|on menu_TiddlerText]]\n- [[getprop tiddlerText_Params|getprop tiddlerText_Params]]\n- [[on menu_TiddlerArray|on menu_TiddlerArray]]\n- [[getprop tiddlerArray_Params|getprop tiddlerArray_Params]]\n- [[on menu_DisplayTiddlyData|on menu_DisplayTiddlyData]]\n- [[getprop displayTiddlyData_Params|getprop displayTiddlyData_Params]]\n---\n- [[on menu_EditHtml|on menu_EditHtml]]\n- [[on menu_RevealViewFolder|on menu_RevealViewFolder]]\n- [[on menu_DisplayWikiJson|on menu_DisplayWikiJson]]\n- [[on menu_TiddlyHelp|on menu_TiddlyHelp]]\n- [[on submenu_Dev|on submenu_Dev]]\n","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"## ✅ **LiveCode Handler to Import JSON into TiddlyWiki (User-Authored Tiddlers)**\n\n### **Here’s the `setprop tiddly_JSON` handler you requested:**\n```livecode\nsetprop tiddly_JSON exportedTiddlyJSON\n   -- Ensure the input is valid JSON\n   if exportedTiddlyJSON is empty then\n      answer \"Error: No JSON data provided.\"\n      exit to top\n   end if\n\n   -- JavaScript to parse the provided JSON and import tiddlers into TiddlyWiki\n   put \"try {\" & \\\n         \"var importedData = JSON.parse(`\" & exportedTiddlyJSON & \"`);\" & \\\n         \"importedData.forEach(function(tiddler) {\" & \\\n         \"$tw.wiki.addTiddler(new $tw.Tiddler(tiddler));\" & \\\n         \"});\" & \\\n         \"$tw.rootWidget.refresh();\" & \\\n         \"liveCode.javascript_Result('Success');\" & \\\n      \"} catch(e) { liveCode.javascript_Result('Error: ' + e.message); }\" into sJavascript\n\n   -- Execute the JavaScript in the widget\n   set the javascriptHandlers of widget \"YourBrowserWidget\" to \"javascript_Result\"\n   do sJavascript in widget \"YourBrowserWidget\"\n   put the result into sResult\n   return sResult\nend tiddly_JSON\n```\n\n---\n\n## ✅ **Key Fixes and Features:**\n- **Proper JSON Parsing:** The `JSON.parse` method ensures the JSON is valid before importing.  \n- **Bulk Importing:** The `forEach` loop imports all provided tiddlers.  \n- **Error Handling:** Errors during the import process are captured and returned.  \n- **TiddlyWiki Refresh:** `$tw.rootWidget.refresh()` ensures the UI reflects the new data.  \n\n---\n\n---\n\n## ✅ **How to Reconstitute a TiddlyWiki from Exported JSON:**\n\n### **Approach 1: Using LiveCode and the Above Handler**\n```livecode\nput exportedTiddlyJSON into tJSONData\nset the tiddly_JSON of widget \"YourBrowserWidget\" to tJSONData\nanswer \"TiddlyWiki Restored Successfully!\"\n```\n\n---\n\n### **Approach 2: Using TiddlyWiki's Built-in Import UI**\n1. Open a **clean TiddlyWiki instance**.  \n2. Drag the exported JSON file into the browser window.  \n3. TiddlyWiki will import the tiddlers and update the state.  \n\n---\n\n### **Approach 3: Creating a TiddlyWiki HTML File Programmatically**\nIf you want to **generate a complete `.html` TiddlyWiki file** from the JSON using LiveCode, the process involves injecting the JSON into a TiddlyWiki template.\n\n```livecode\ncommand exportTiddlyWikiHTML exportedTiddlyJSON\n   -- Template for a minimal TiddlyWiki file (assumes standard plugins pre-installed)\n   put url \"file:tiddlywiki_template.html\" into tWikiTemplate\n   \n   -- Inject the JSON data into a pre-defined tiddler store area\n   replace \"'$:/ImportPlaceholder$'\" with exportedTiddlyJSON in tWikiTemplate\n   \n   -- Save the modified TiddlyWiki as a new file\n   put tWikiTemplate into url \"file:exported_tiddlywiki.html\"\n   answer \"TiddlyWiki exported as exported_tiddlywiki.html\"\nend exportTiddlyWikiHTML\n```\n\n---\n\n### **Approach 4: TiddlyWiki Node.js Command Line Export**\nIf you have **TiddlyWiki Node.js** installed, you can export a `.html` file like this:\n\n```bash\ntiddlywiki ./my-wiki --build index\n```\n\n---\n\n---\n\n## ✅ **Recap of How to Reconstitute a TiddlyWiki File from JSON:**\n| **Method**                     | **Description**                          | **Best For**                     |\n|--------------------------------|----------------------------------------|---------------------------------|\n| **LiveCode Handler (Above)**   | Directly import JSON into a TiddlyWiki widget. | **Programmatic JSON Importing** |\n| **TiddlyWiki Import UI**        | Dragging a JSON file into a running TiddlyWiki. | **Manual Imports**              |\n| **HTML Injection with LiveCode** | Embedding JSON into a `.html` template. | **Creating Full .html Files**    |\n| **TiddlyWiki CLI (Node.js)**    | Exporting a `.html` using CLI tools.    | **Automated Server Exports**     |\n\n---\n\n## ✅ **Best Practices:**\n- **Keep Backups:** Always back up the original TiddlyWiki before importing large JSON datasets.  \n- **Use Valid JSON:** Ensure the exported JSON is properly validated before importing.  \n- **Refresh the UI:** Always call `$tw.rootWidget.refresh()` after a bulk import.  \n\n---\n\n### ✅ **Next Steps:**\n- Would you like help with **batch importing multiple TiddlyWikis**?  \n- Need assistance in **synchronizing multiple instances** using IPFS or other decentralized storage?  \n\nLet me know how you'd like to continue! 😊","title":"Importing Tiddly JSON","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"TiddlyWiki stores eveeything within itself. A [[monad]] is self-sufficient. However the browser will display state without this necessarily being reflected in the TiddlyWiki file until it is saved. \n\n# Questions\nTiddlyWiki will use local storage to store changes by default (I believe). Here we explore how such local storage works with TiddlyWiki in the context of Livecodes use of an embedded browser widget.\n\n# Blob Urls\nIt seesm that saving wiki using the [[red save button]] creates a new [[Blob URL]] on each save. It is not clear whether the ealier blob urls are deleted, or they simply hang around. See [[Garbage Collection]]. ","title":"Local Storage","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"title":"Module","text":"- [[Global   TiddlyWiki   Menu]]\n- [[Global   TiddlyWiki   Dev   Menu]]\n- [[View TiddlyWiki]]\n- [[behavior_ViewTiddlyWiki|behavior_ViewTiddlyWiki]]\n","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"This messsage is sent to the browser widget when a user presses the [[Save changes button]].","title":"on browserUnhandledLoadRequest","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Here we aim to describe the current roadmap for this module:\n\n* [[Wiki Interpoperability]]\n* [[Static Site Publishing]]\n* [[Tiddly Mobile]] and [[Tiddly Desktop]]\n* [[Workflows]] and [[Project Management]]","title":"Roadmap","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"One of the most annoying things is to loose text that you have written. Fortunately TiddlyWiki has several ways to save it's text, and when layered and supported by well desinged tooling we can ensure that an authors text is treated with respect.\n\n* [[Red Save Button]]\n* [[Local Storage]]\n* [[Flaky Saving]]\n* Saving in Layers\n* History and Version Control\n* [[Anarchive]] and the Permanent Archive\n* [[Importing Tiddly JSON]]","title":"Saving Text","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"This handler sets the text and [[Content Type]] of a named tiddler - creating a new tiddler if it does not exist.\n\n`\nsetprop tiddler_Markdown [pTitle] sContent\n   if pTitle is empty then put the ticks into pTitle\n   \n   # Ensure safe JavaScript string handling but reserve line breaks\n   _Normalize sContent\n   \n   set the tiddler_RawMarkdown [pTitle] of me to sContent\n   put the result into sResult\n   return sResult\nend tiddler_Markdown`\n","title":"setprop tiddler_Markdown","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Here we explore how we can use wiki to create security and therefore also privacy. Our starting point is that most security failures are human failures.\n\n# Techical complexity\nCryptography is philisophically and technically complex. Cryptographers focus on these aspects with much less interest in the human aspects. furthermore most finance flows into this area through experts, open source developers and companies. There is little incentive for designers to provide clear workflows and standardised interfaces.\n\n# Serious Fun\nOur strategy with Tiddly Security is to have some serious fun. We aim to create an environment and vibrant social community that engages with deep security and privacy issues. We seek to combine the openess of wiki, with the capabilities of strong cryptography, and the social intelligence required of good HumanInt.","title":"Tiddly Security","modified":"2025-01-14T08:54:37.836Z"},{"created":"2025-01-01T00:00:00.000Z","text":"A tiddlyWiki is an html file structured as a [[Monad]] or single-file without any dependencies. We use this format to create [[Guides]].","title":"TiddlyWiki","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"In the near term we aim to implement:\n\n# [[Svg Buttons]]\n# [[Todo checkboxes]] and [[Dragable Buttons]]\n# [[Custom Url Links]]\n# [[Github Saving]]\n# [[Mermaid Plugin]]","title":"Todo","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"","title":"View TiddlyWiki","type":"text/markdown","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Right now I'm mainly woking on:\n\n* Tidying the [[behavior_TiddlyWiki]] script to ensure it is standalone and\n* Getting LiveCode menus to set various TiddlyWiki properties.\n* [[Saving Text]] and [[Create Tiddler]]\n* [[Tiddly Security]]","title":"Working on","modified":"2025-01-01T00:00:00.000Z"}]