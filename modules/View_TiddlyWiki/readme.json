[{"title":"\"TiddlyServer\" by Matt Lauber","created":"2016-01-01T00:00:00.000Z","modified":"2021-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki","url":"https://github.com/mklauber/TiddlyServer/releases/","text":"''Note:'' This is an older version of ~TiddlyServer.   A modern version can be referenced [[here.|TiddlyServer by Arlen Beiler]] \n\n----\nTiddlyServer is a special purpose Desktop app, designed to facilitate managing multiple instances of TiddlyWiki running as a server.  It does not require internet acess to access the wikis.\n\n{{!!url}}\n\n<<<\nTiddlyServer can import both TiddlyWiki files and TiddlyFolder wikis.  For each wiki, you specify a prefix to serve it with and the source to import from.  It will copy the wikis to its own internal store and begin serving them up at http://localhost:8080/{prefix}/.  The export button for each wiki will convert it to a single file wiki. \n\n<<<\n"},{"created":"2025-01-01T00:00:00.000Z","text":"A module to display and interact with TiddlyWiki. We use this module to create a StackRunner for [[Guides]].\n\n# Aims\nOur aim is to standardise a minimal behavior script for displaying and interacting with TiddlyWiki in LiveCode. This script should enable us to store and retrieve data in TiddlyWiki which we can use to bootstrap the downloading of further code and content from trusted sources. This project is a key component of the wider project to intergrate several wikis into a ecosystem of federated components - see [[Wiki Project]] for details.\n\n# Security\nAs part of this functionaility, we require the ability to to use secure standards based digital signatures in order to establish trust for the code (and content) we download. Security is of particular importance when we use [[LiveButton]] to access the files system or other local resources on the users LAN. See [[Tiddly Security]].","title":"About","modified":"2025-01-23T22:42:28.201Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"We imagine the ability to bring forth libraries of curated knowledge - a LexIcon of LoRe. FreeForm. We use this language to peice together a structure that we intuit.\n\nFormally we add a library (AddLib) to the problem space. This library brings with it a set of concepts, definitions or LoRe. We use these elements to compose sophisticated, evolving structures we call InstiTution's or DeMe's.","title":"AdLib","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Here we test some imported images that animate by default. These images were mainly sourced from Wikipedia:\n\n# [[Ikosaeder-Animation.png]]\n# [[Fencer-anim.png]]\n# [[Brain_MRI_apng_105px_100ms.png]]\n# [[Apngegomanyak.png]]\n# [[3d2.png]]\n# [[elephant.png]]\n# [[clock.png]]\n# [[Animated_PNG_example_bouncing_beach_ball.png]]","title":"Animated Images","status":"complete","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"An apostrophe (`'`) in English has three primary uses:\n\n| **Use Case**             | **Example**                        | **Purpose**                     |\n|--------------------------|------------------------------------|---------------------------------|\n| **Possession**            | *Lexon's book, the dog's leash*   | Indicates ownership             |\n| **Contractions**          | *It's, don't, can't*              | Replaces omitted letters        |\n| **Plurals of Letters/Numbers** | *Mind your p's and q's*          | Clarifies plurals of symbols    |\n\nWe can capture thsi correct usage as:\n> An apostrophe is the contraction or possession of words and numbers (nerds).\n\n---\n\n### **1. To Show Possession (Lexon's Use of Software)**\n- **Purpose:** Indicates that something **belongs to** or is **associated with** someone or something.\n- **Examples:**\n  - **Singular Possession:**  \n    - *Lexon's use of software* → **Lexon's** indicates that the \"use of software\" belongs to Lexon.\n    - *The dog's leash* → The leash belongs to the dog.\n  - **Plural Possession:**  \n    - *The dogs' leashes* → The leashes belong to multiple dogs.  \n      (Note the apostrophe placement after the `s`.)\n    - *The children's toys* → The toys belong to the children.  \n      (Irregular plural forms like \"children\" take `'s`.)\n\n> **Key Rule:** Add `'s` to singular nouns and irregular plurals. For regular plurals ending in `s`, just add an apostrophe (`'`).\n\nIn wiki we often wish to ensure links to singular and plural terms refer to the same page - so [[wiki]] and [[wikis]] should link to the same page. In federated wiki this is easy to write as [[wiki]]s. We propose adopting a corruption of English grammer with regard to how we use plurasl in CamelCase - through the use of an apostrophe. Mainly as it works already in tiddlyWiki - but also because it is funny. See FunnyFish's.\n\n---\n\n### **2. To Indicate Missing Letters (Contractions)**\n- **Purpose:** Replaces omitted letters in a word or phrase.\n- **Examples:**\n  - *It's* → Short for *it is* or *it has*.\n  - *Don't* → Short for *do not*.\n  - *You're* → Short for *you are*.\n  - *They've* → Short for *they have*.\n\n---\n\n### **3. To Form Plurals of Letters, Numbers, and Symbols (Rare Use)**\n- **Purpose:** Helps clarify the plural form of a single letter, number, or symbol, particularly in cases where the lack of an apostrophe might confuse readers.\n- **Examples:**\n  - *Mind your p's and q's* → Refers to the letters p and q.\n  - *There are two 7's in this sequence* → Avoids confusion with \"7s.\"\n  - *He got all A's on his report card* → Clarifies the plural of the letter \"A.\"\n\n**Important Note:** This use is becoming less common, and some modern style guides omit the apostrophe in such cases (*\"Mind your ps and qs\"*).\n\n---\n\n### **Notable Mistakes and Misunderstandings**\n1. **It's vs. Its:**\n   - *It's* → Short for *it is* or *it has*.  \n   - *Its* → Shows possession (*The cat licked its paw*).\n\n2. **Using Apostrophes for Plurals (Incorrect):**\n   - Wrong: *Apple's for sale.*  \n   - Correct: *Apples for sale.*  \n   (Apostrophes are not used to pluralize regular nouns.)\n\n---\n\n### **In Your Example: \"Lexon's Use of Software\"**\n- The **apostrophe** in \"Lexon's\" shows **possession**, meaning the \"use of software\" belongs to or is associated with Lexon.","title":"Apostrophe","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"This is the default behavior for the [[TiddlyWiki Module]]. It aims to be as minimal as possible and provide the core functionaily needed to run TiddlyWiki in a single Livecode [[Browser Widget]]. It currently contains the following handlers:\n\n# Working on\n- [[on browserUnhandledLoadRequest]]\n- [[on javascript_Result]]\n\n# Tidder | Props\n- [[getprop tiddler_Array]]\n- [[getprop tiddler_Visible]]\n- [[setprop tiddler_Visible]]\n- [[getprop tiddler_Text]]\n- [[setprop tiddler_Text]]\n- [[getprop tiddler_IsShowing]]\n- [[setprop show_Tiddlers]]\n- [[getprop tiddler_Exists]]]]\n\n# Tiddler | Utils\n- [[setprop show_Tiddler]]\n- [[setprop hide_Tiddler]]\n- [[setprop prepend_Tiddler]]\n- [[setprop append_Tiddler]]\n- [[setprop delete_Tiddler]]\n\n# Tiddly | Props\n- [[getprop tiddly_HTML]]\n- [[getprop tiddly_Layout]]\n- [[setprop tiddly_Layout]]\n- [[getprop tiddly_Title]]\n- [[setprop tiddly_Title]]\n- [[getprop tiddly_Tags]]\n- [[getprop tiddly_ListTitles]]\n- [[getprop tiddly_StoryTitles]]\n- [[getprop tiddly_Data]]\n- [[getprop tiddly_JSON]]\n- [[getprop tiddlyWiki_JSON]]\n\n# Browser | Props\n- [[getprop browser_HTML]]\n- [[getprop browser_URL]]\n- [[setprop browser_URL]]\n- [[getprop browser_File]]\n- [[setprop browser_File]]\n- [[setprop browser_Navigate]]\n\n# Events | browser\n- [[on browserDocumentLoadBegin]]\n- [[on browserDocumentLoadComplete]]\n- [[on browserDocumentLoadFailed]]\n- [[on browserFrameDocumentLoadBegin]]\n- [[on browserFrameDocumentLoadComplete]]\n- [[on browserFrameDocumentLoadFailed]]\n- [[on browserNavigateBegin]]\n- [[on browserNavigateFailed]]\n\n# Private\n- [[PC _Normalize]]\n- [[PC _NormalizeTitle]]\n- [[PF _WaitJavascriptResult]]\n- [[PF _GetJavascriptResult]]\n- [[PC _SaveText]]","title":"behavior_TiddlyWiki","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"title":"behavior_ViewTiddlyWiki","text":"- [[on browserUnhandledLoadRequest]]\n- [[on javascript_Result|on javascript_Result]]\n- [[getprop tiddly_HTML|getprop tiddly_HTML]]\n- [[getprop tiddler_Array|getprop tiddler_Array]]\n- [[getprop tiddly_Layout|getprop tiddly_Layout]]\n- [[setprop tiddly_Layout|setprop tiddly_Layout]]\n- [[getprop tiddler_Visible|getprop tiddler_Visible]]\n- [[setprop tiddler_Visible|setprop tiddler_Visible]]\n- [[setprop show_Tiddler|setprop show_Tiddler]]\n- [[setprop hide_Tiddler|setprop hide_Tiddler]]\n- [[getprop browser_HTML|getprop browser_HTML]]\n- [[getprop browser_URL|getprop browser_URL]]\n- [[setprop browser_URL|setprop browser_URL]]\n- [[getprop browser_File|getprop browser_File]]\n- [[setprop browser_File|setprop browser_File]]\n- [[setprop browser_Navigate|setprop browser_Navigate]]\n- [[getprop tiddler_Text|getprop tiddler_Text]]\n- [[setprop tiddler_Text|setprop tiddler_Text]]\n- [[getprop tiddler_BulletMarkdown|getprop tiddler_BulletMarkdown]]\n- [[setprop tiddler_Bullets|setprop tiddler_Bullets]]\n- [[setprop tiddler_Markdown|setprop tiddler_Markdown]]\n- [[setprop tiddler_RawMarkdown|setprop tiddler_RawMarkdown]]\n- [[private function _Tiddlerbullets|private function _Tiddlerbullets]]\n- [[private command _Normalize|private command _Normalize]]\n- [[private command _NormalizeEntities|private command _NormalizeEntities]]\n- [[getprop tiddler_IsShowing|getprop tiddler_IsShowing]]\n- [[setprop show_Tiddlers|setprop show_Tiddlers]]\n- [[getprop tiddly_Title|getprop tiddly_Title]]\n- [[setprop tiddly_Title|setprop tiddly_Title]]\n- [[getprop tiddly_Tags|getprop tiddly_Tags]]\n- [[getprop tiddly_ListTitles|getprop tiddly_ListTitles]]\n- [[getprop tiddly_StoryTitles|getprop tiddly_StoryTitles]]\n- [[getprop tiddly_Data|getprop tiddly_Data]]\n- [[getprop tiddly_JSON|getprop tiddly_JSON]]\n- [[setprop prepend_Tiddler|setprop prepend_Tiddler]]\n- [[setprop append_Tiddler|setprop append_Tiddler]]\n- [[setprop delete_Tiddler|setprop delete_Tiddler]]\n- [[getprop tiddlyWiki_JSON|getprop tiddlyWiki_JSON]]\n- [[getprop tiddler_Exists|getprop tiddler_Exists]]\n- [[on browserDocumentLoadBegin]]\n- [[on browserDocumentLoadComplete]]\n- [[on browserDocumentLoadFailed]]\n- [[on browserFrameDocumentLoadBegin]]\n- [[on browserFrameDocumentLoadComplete]]\n- [[on browserFrameDocumentLoadFailed]]\n- [[on browserNavigateBegin]]\n- [[on browserNavigateFailed]]\n- [[private command _NormalizeTitle|private command _NormalizeTitle]]\n- [[private function _WaitJavascriptResult|private function _WaitJavascriptResult]]\n- [[private function _GetJavascriptResult|private function _GetJavascriptResult]]\n- [[private command _SaveText|private command _SaveText]]\n","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"At its core, \"Compositing Complexity\" point toward **the act of merging multiple, potentially intricate elements into a cohesive and functional whole**. It highlights the challenge and sophistication of working with complex, interrelated parts in any domain, whether visual, intellectual, or systemic.\n\n# Aspects\nThe phrase **\"Compositing Complexity\"** can have several interpretations depending on the context in which it is used. Below are a few possible meanings across different fields:\n\n### **1. In Systems and Software Design**\n- **Compositing**: The act of assembling components, modules, or systems into a unified structure.\n- **Complexity**: The inherent intricacies in managing dependencies, interactions, and behaviors among the components.\n- **Meaning**: In this context, it might refer to the challenges of designing or managing complex software architectures, workflows, or systems where multiple parts must function together seamlessly.\n\n### **2. In Philosophy or Systems Thinking**\n- **Compositing**: Combining various ideas, elements, or perspectives into a comprehensive framework or theory.\n- **Complexity**: The nuanced and multifaceted nature of the phenomena being studied or represented.\n- **Meaning**: Here, it could refer to the intellectual process of synthesizing complex systems, ideas, or phenomena into a coherent whole, acknowledging their interrelated and multifaceted nature.\n\n### **3. In Art and Creative Work**\n- **Compositing**: The act of blending various artistic elements, such as textures, colors, or forms, into a unified piece.\n- **Complexity**: The depth, richness, and interplay of these elements.\n- **Meaning**: It could describe the deliberate layering and interweaving of artistic elements to achieve a rich and intricate composition that evokes meaning or emotion.\n\n### **4. In Visual Effects and Film Production**\n- **Compositing**: The process of combining visual elements from different sources into a single image, often to create complex visual effects.\n- **Complexity**: Refers to the intricate layers, interactions, and adjustments needed to make the final composite realistic and seamless.\n- **Meaning**: \"Compositing Complexity\" in this context could describe the challenges and technical sophistication involved in integrating multiple visual elements (e.g., CGI, live-action footage, and special effects) into a cohesive and visually compelling whole.","title":"Compositing Complexity","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"Tiddlers - just like most markup - have a content-type. In TiddlyWiki you can see the `Type: content type` field. By default TiddlyWiki uses `text/vnd.tiddlywiki` as its markup, but we prefer `text/markdown` or [[Markdown]].\n\n! Todo\nWe like the idea of creating bi-directional translation from basic forms of wiki markup. For that we have:\n# Hand rolled scripts\n# [[Pandoc]]","title":"Content Type","modified":"2025-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki"},{"created":"2025-01-01T00:00:00.000Z","text":"Here is a button that creates a tiddler [[NotificationTemplate]], then sets its text to the content of a vaiable, and uses the created tiddler for a notification (chaining the actions):\n\n<$button>\n  Dynamic Notify\n  <$action-setfield \n    $tiddler=\"NotificationTemplate\" \n    text=\"Don't Panic! Today is <<now 'dddd, MMMM DD YYYY'>>.\"\n    tags=\"Template Notification Hitchhikers\"/>\n  <$action-sendmessage \n    $message=\"tm-notify\" \n    $param=\"NotificationTemplate\"/>\n</$button>\n\nIt should be modified to use a shadom or temporary tiddler. The same [[NotificationTemplate]] tiddler is used by the LiveCode [[setrpop tiddly_Notification]] handler.\n","title":"Create Notification Button","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"<$button>\n  Render Dynamic Tag\n  <$action-createtiddler\n    text=<<renderTiddler \"$:/templates/RenderedTaggedContent\">>\n    currentTag=\"Platform\"/>\n</$button>\n","title":"Create Output","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"There are several ways to create a new tiddler. The one of interest to us here is creating it form external scripts. Here are some examples using LiveCode:\n\n* [[setprop tiddler_Text]]\n* [[setprop tiddler_Markdown]]\n* [[setprop tiddler_BulletMarkdown]]\n* [[setprop tiddler_Bullets]]\n* [[setprop tiddler_RawMarkdown]]\n","title":"Create Tiddler","modified":"2025-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki"},{"created":"2025-01-01T00:00:00.000Z","text":"We are getting to know TiddlyWiki better, and aim to customise the default minimal TiddlyWiki experience for the use as TiddlyGuide's\n\nIn this wiki we experiment with the following plugins:\n\n- Todo List\n- Plugin management\n- Slides\n- Timelines\n- Vote","title":"Custom TiddlyWiki","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"A DeMe is a digital or democratic membership organisation structured as a DAO wrapped around an NFT. The name refers to the memetic nature of the organisation, which aims to be a microassembly structured around a concept that constitutes the smallest functional element of governance around a vlaue flow.","title":"DeMe","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"A [[Digital Institution]] is a synthesis of the practices and processes we use in software development and the [[Language of law]]. It is a legal entity expressed in specific form of (performative) code that we call Lexon. Lexon is [[Klinon for Lawyers]]. More seriously it s a LegalLanguage that forms the basis of a new discipline we call PerformativeScience.","title":"DigitalInstitution","modified":"2025-01-01T00:00:00.000Z"},{"created":"2015-01-01T00:00:00.000Z","text":"A plugin that allows to encrypt your tiddlers individually Danielo Rodriguez.\n\n{{!!url}}\n\n<<<\nAdvantages:\n\n* You can specify a different password for each tiddler if you want.\n* You don't have to encrypt your whole wiky.\n* If you forget your password, you only lose a tiddler.\n* It's possible to edit the tiddler content , tags and fields except the encrypt field after encryption.\n* [...]\n<<<\n","title":"Encrypt single tiddler","modified":"2025-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki","url":"http://danielorodriguez.com/TW5-EncryptTiddlerPlugin/"},{"title":"fish-fins-solid.svg","text":"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d=\"M275.2 38.4c-10.6-8-25-8.5-36.3-1.5S222 57.3 224.6 70.3l9.7 48.6c-19.4 9-36.9 19.9-52.4 31.5c-15.3 11.5-29 23.9-40.7 36.3L48.1 132.4c-12.5-7.3-28.4-5.3-38.6 4.9S-3 163.3 4.2 175.9L50 256 4.2 336.1c-7.2 12.6-5 28.4 5.3 38.6s26.1 12.2 38.6 4.9l93.1-54.3c11.8 12.3 25.4 24.8 40.7 36.3c15.5 11.6 33 22.5 52.4 31.5l-9.7 48.6c-2.6 13 3.1 26.3 14.3 33.3s25.6 6.5 36.3-1.5l77.6-58.2c54.9-4 101.5-27 137.2-53.8c39.2-29.4 67.2-64.7 81.6-89.5c5.8-9.9 5.8-22.2 0-32.1c-14.4-24.8-42.5-60.1-81.6-89.5c-35.8-26.8-82.3-49.8-137.2-53.8L275.2 38.4zM384 256a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"/></svg>","type":"image/svg+xml"},{"title":"fish-svgrepo-com.svg","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<svg width=\"800px\" height=\"800px\" viewBox=\"0 0 1024 1024\" class=\"icon\"  version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M228.6 632.9c57.6-65.4 57.6-164.1-0.1-229.5-79.5 28.3-128.4 70.8-128.4 114.7 0 43.6 47.8 86.1 128.5 114.8zM491.2 705.1l0.1-3.7c-15.5 0.9-31.1 1.4-46.8 1.4-17 0-34-0.6-50.8-1.6 22.4 15.1 48.9 23.6 76.8 24.1 5.5 0.1 10.6-1.9 14.5-5.7 3.9-4 6.1-9.1 6.2-14.5zM632.4 337.8c0.4-17.5-26.1-37.6-64.9-38.6-73.3-1.9-144.1 11.9-202 38.3 25.7-2.6 52-3.9 78.9-3.9 66.4 0 130.7 8 187.5 23.4l0.5-19.2zM639.8 699.6c27.6 0 51-18.2 59-43.1-28.6 12.3-61.2 22.5-97 30.1 10.6 8.3 23.9 13 38 13z\" fill=\"#663333\" /><path d=\"M850.4 518.2c0-50.5 17.3-98.9 48.5-137.6-47.3 3.8-89.3 31.5-111.5 74.2-0.1 0.3-2 3.1-3 4.2-6.9 7.1-18.2 7.4-25.4 0.5-25.4-24.5-65.3-45.8-115.2-61.5-58.7-18.5-127.7-28.3-199.5-28.3-56.1 0-109.6 5.8-159.1 17.3-6.8 1.6-13.4 3.2-19.9 5 56.3 74.4 56.3 178.1 0.1 252.5 25.3 6.9 52.4 12.2 80.9 16 31.7 4.2 64.7 6.3 97.9 6.3 41.8 0 82.7-3.3 121.6-9.9 84.7-14.3 155.1-43.4 193.1-80 7.1-6.9 18.5-6.7 25.4 0.5 1 1 1.8 2.1 2.5 3.3 0.2 0.3 0.4 0.6 0.5 1 0 0.1 0.1 0.1 0.1 0.2 22.1 42.6 64.1 70.2 111.3 74-31-38.8-48.3-87.2-48.3-137.7z\" fill=\"#663333\" /><path d=\"M956.5 360.3c1.8 6.7-0.4 13.8-5.7 18.3-41 34.9-64.5 85.8-64.5 139.6s23.5 104.7 64.5 139.6c5.3 4.5 7.5 11.6 5.7 18.2-1.8 6.7-7.2 11.8-14 13.1-10.5 2-21.4 3-32.4 3-57.7 0-110.7-28.2-143-74.9-9 6.9-18.8 13.6-29.6 19.8v0.6c0 53.9-43.9 97.8-97.8 97.8-32.1 0-61.7-15.5-79.8-41.3-10.8 1.6-21.7 3-32.7 4.2l-0.1 7.3c-0.3 15-6.4 29.1-17.2 39.6-10.6 10.2-24.4 15.8-39.1 15.8h-1c-53.1-0.9-102-24.9-135.4-66.1-38-5.4-73.7-13.5-106.2-24.3-104.2-34.2-164-89.8-164-152.4 0-37.4 21.7-73 62.6-103 36.2-26.5 86.7-48 146.1-62.2 70.8-59.2 180.8-92.6 295.5-89.6 57.1 1.5 100.9 34.6 99.9 75.4l-0.8 29.2c39.9 13.8 73.7 31.2 99.5 51.2 32.3-46.7 85.2-74.9 143-74.9 11 0 21.9 1 32.4 3 6.9 1.3 12.3 6.3 14.1 13z\" fill=\"#663333\" /><path d=\"M641 466.7c3-9.4-2.3-19.5-11.7-22.5-54-17.1-118-26.1-184.9-26.1-9.9 0-18 8-18 18 0 9.9 8 18 18 18 63.3 0 123.5 8.4 174 24.4 1.8 0.6 3.6 0.8 5.4 0.8 7.7-0.1 14.7-5 17.2-12.6z\" fill=\"#4EC8D8\" /><path d=\"M898.9 380.6c-31.2 38.7-48.5 87.1-48.5 137.6s17.3 98.9 48.5 137.6c-47.2-3.8-89.2-31.4-111.3-74 0-0.1-0.1-0.1-0.1-0.2-0.2-0.4-0.4-0.7-0.5-1-0.7-1.1-1.5-2.2-2.5-3.3-6.9-7.1-18.2-7.4-25.4-0.5-38 36.6-108.4 65.7-193.1 80-38.9 6.6-79.8 9.9-121.6 9.9-33.3 0-66.2-2.1-97.9-6.3-28.5-3.8-55.6-9.1-80.9-16 56.2-74.4 56.2-178.1-0.1-252.5 6.5-1.7 13.1-3.4 19.9-5 49.5-11.5 103-17.3 159.1-17.3 71.8 0 140.8 9.8 199.5 28.3 49.9 15.8 89.8 37.1 115.2 61.5 7.1 6.9 18.5 6.7 25.4-0.5 1-1.1 2.9-3.9 3-4.2 22-42.6 64-70.3 111.3-74.1z\" fill=\"#4EC8D8\" /><path d=\"M698.7 656.5c-8 25-31.4 43.1-59 43.1-14.1 0-27.3-4.7-38-13 35.8-7.7 68.4-17.8 97-30.1z\" fill=\"#92E4EA\" /><path d=\"M629.3 444.2c9.4 3 14.7 13.1 11.7 22.5-2.4 7.7-9.5 12.6-17.1 12.6-1.8 0-3.6-0.3-5.4-0.8-50.6-16-110.8-24.4-174-24.4-9.9 0-18-8-18-18 0-9.9 8-18 18-18 66.8 0 130.7 9 184.8 26.1z\" fill=\"#663333\" /><path d=\"M567.5 299.2c38.8 1 65.4 21.2 64.9 38.6l-0.5 19.2c-56.8-15.3-121.1-23.4-187.5-23.4-26.9 0-53.3 1.3-78.9 3.9 57.9-26.3 128.7-40.2 202-38.3zM491.2 701.3l-0.1 3.7c-0.1 5.5-2.3 10.6-6.2 14.3-3.9 3.8-9.1 5.8-14.5 5.7-27.9-0.5-54.4-9-76.8-24.1 16.8 1.1 33.8 1.6 50.8 1.6 15.8 0.2 31.4-0.3 46.8-1.2z\" fill=\"#92E4EA\" /><path d=\"M225.7 491.2c0-11.4-9.3-20.7-20.7-20.7-11.4 0-20.7 9.3-20.7 20.7 0 11.4 9.3 20.7 20.7 20.7 11.4 0 20.7-9.2 20.7-20.7z\" fill=\"#663333\" /><path d=\"M228.5 403.4c57.7 65.4 57.7 164.1 0.1 229.5-80.7-28.7-128.5-71.2-128.5-114.7 0-43.9 48.9-86.5 128.4-114.8z\" fill=\"#92E4EA\" /><path d=\"M205 491.2m-20.7 0a20.7 20.7 0 1 0 41.4 0 20.7 20.7 0 1 0-41.4 0Z\" fill=\"#663333\" /></svg>","type":"image/svg+xml"},{"created":"2025-01-01T00:00:00.000Z","text":"We require the saving of data to be robust. Asynchronous calling of javascript with messages depends on a robust handling of this in Livecode. Livecodes implementation of this is recent and not mature. In addition the passing of mulitline messages in Livecode is not easy to handle. There is no reason to think this will be the case for Javascript messaging. In short we should try to limit the need for passing large amounts of data back and forth between Livecode and Javascript.\n\nIt seems that the saving may have been unreliable as it requires the javascripthandlers to be correclty set in order to receive callbacks from javascript. We need to ensure these are properly set on the browser widget by the code.","title":"Flaky Saving","modified":"2025-01-01T00:00:00.000Z"},{"title":"Global   TiddlyWiki   Dev   Menu","text":"- [[getprop menu_Target|getprop menu_Target]]\n- [[getprop menu_CheckTarget|getprop menu_CheckTarget]]\n- [[on menu_Behavior|on menu_Behavior]]\n---\n- [[on menu_MenuEdit|on menu_MenuEdit]]\n","type":"text/markdown"},{"title":"Global   TiddlyWiki   Menu","text":"- [[getprop menu_Target|getprop menu_Target]]\n- [[getprop menu_CheckTarget|getprop menu_CheckTarget]]\n- [[on menu_LoadGettingStarted|on menu_LoadGettingStarted]]\n- [[on menu_TiddlyWiki|on menu_TiddlyWiki]]\n- [[getprop tiddlywiki_Param|getprop tiddlywiki_Param]]\n- [[getprop tiddlywiki_Params|getprop tiddlywiki_Params]]\n---\n- [[on menu_ShowTiddler|on menu_ShowTiddler]]\n- [[getprop disabled_ShowTiddler|getprop disabled_ShowTiddler]]\n- [[getprop showTiddler_Param|getprop showTiddler_Param]]\n- [[getprop showTiddler_Params|getprop showTiddler_Params]]\n- [[on menu_DeleteTiddler|on menu_DeleteTiddler]]\n- [[getprop deleteTiddler_Params|getprop deleteTiddler_Params]]\n- [[on menu_DisplayModuleText|on menu_DisplayModuleText]]\n- [[on menu_CreateModuleTiddler|on menu_CreateModuleTiddler]]\n---\n- [[on menu_AddBrowserBehavior|on menu_AddBrowserBehavior]]\n- [[getprop checked_AddBrowserBehavior|getprop checked_AddBrowserBehavior]]\n---\n- [[on menu_TiddlerText|on menu_TiddlerText]]\n- [[getprop tiddlerText_Params|getprop tiddlerText_Params]]\n- [[on menu_TiddlerArray|on menu_TiddlerArray]]\n- [[getprop tiddlerArray_Params|getprop tiddlerArray_Params]]\n- [[on menu_DisplayTiddlyData|on menu_DisplayTiddlyData]]\n- [[getprop displayTiddlyData_Params|getprop displayTiddlyData_Params]]\n---\n- [[on menu_EditHtml|on menu_EditHtml]]\n- [[on menu_RevealViewFolder|on menu_RevealViewFolder]]\n- [[on menu_DisplayWikiJson|on menu_DisplayWikiJson]]\n- [[on menu_TiddlyHelp|on menu_TiddlyHelp]]\n- [[on submenu_Dev|on submenu_Dev]]\n","type":"text/markdown"},{"created":"2025-01-20T21:03:48.716Z","text":"They dance together.","tags":["Guide"],"title":"Guides and Encyclopedias","modified":"2025-01-20T21:04:49.220Z"},{"title":"Ikosaeder-Animation.png","text":"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","type":"image/png"},{"created":"2025-01-01T00:00:00.000Z","text":"## ✅ **LiveCode Handler to Import JSON into TiddlyWiki (User-Authored Tiddlers)**\n\n### **Here’s the `setprop tiddly_JSON` handler you requested:**\n```livecode\nsetprop tiddly_JSON exportedTiddlyJSON\n   -- Ensure the input is valid JSON\n   if exportedTiddlyJSON is empty then\n      answer \"Error: No JSON data provided.\"\n      exit to top\n   end if\n\n   -- JavaScript to parse the provided JSON and import tiddlers into TiddlyWiki\n   put \"try {\" & \\\n         \"var importedData = JSON.parse(`\" & exportedTiddlyJSON & \"`);\" & \\\n         \"importedData.forEach(function(tiddler) {\" & \\\n         \"$tw.wiki.addTiddler(new $tw.Tiddler(tiddler));\" & \\\n         \"});\" & \\\n         \"$tw.rootWidget.refresh();\" & \\\n         \"liveCode.javascript_Result('Success');\" & \\\n      \"} catch(e) { liveCode.javascript_Result('Error: ' + e.message); }\" into sJavascript\n\n   -- Execute the JavaScript in the widget\n   set the javascriptHandlers of widget \"YourBrowserWidget\" to \"javascript_Result\"\n   do sJavascript in widget \"YourBrowserWidget\"\n   put the result into sResult\n   return sResult\nend tiddly_JSON\n```\n\n---\n\n## ✅ **Key Fixes and Features:**\n- **Proper JSON Parsing:** The `JSON.parse` method ensures the JSON is valid before importing.  \n- **Bulk Importing:** The `forEach` loop imports all provided tiddlers.  \n- **Error Handling:** Errors during the import process are captured and returned.  \n- **TiddlyWiki Refresh:** `$tw.rootWidget.refresh()` ensures the UI reflects the new data.  \n\n---\n\n---\n\n## ✅ **How to Reconstitute a TiddlyWiki from Exported JSON:**\n\n### **Approach 1: Using LiveCode and the Above Handler**\n```livecode\nput exportedTiddlyJSON into tJSONData\nset the tiddly_JSON of widget \"YourBrowserWidget\" to tJSONData\nanswer \"TiddlyWiki Restored Successfully!\"\n```\n\n---\n\n### **Approach 2: Using TiddlyWiki's Built-in Import UI**\n1. Open a **clean TiddlyWiki instance**.  \n2. Drag the exported JSON file into the browser window.  \n3. TiddlyWiki will import the tiddlers and update the state.  \n\n---\n\n### **Approach 3: Creating a TiddlyWiki HTML File Programmatically**\nIf you want to **generate a complete `.html` TiddlyWiki file** from the JSON using LiveCode, the process involves injecting the JSON into a TiddlyWiki template.\n\n```livecode\ncommand exportTiddlyWikiHTML exportedTiddlyJSON\n   -- Template for a minimal TiddlyWiki file (assumes standard plugins pre-installed)\n   put url \"file:tiddlywiki_template.html\" into tWikiTemplate\n   \n   -- Inject the JSON data into a pre-defined tiddler store area\n   replace \"'$:/ImportPlaceholder$'\" with exportedTiddlyJSON in tWikiTemplate\n   \n   -- Save the modified TiddlyWiki as a new file\n   put tWikiTemplate into url \"file:exported_tiddlywiki.html\"\n   answer \"TiddlyWiki exported as exported_tiddlywiki.html\"\nend exportTiddlyWikiHTML\n```\n\n---\n\n### **Approach 4: TiddlyWiki Node.js Command Line Export**\nIf you have **TiddlyWiki Node.js** installed, you can export a `.html` file like this:\n\n```bash\ntiddlywiki ./my-wiki --build index\n```\n\n---\n\n---\n\n## ✅ **Recap of How to Reconstitute a TiddlyWiki File from JSON:**\n| **Method**                     | **Description**                          | **Best For**                     |\n|--------------------------------|----------------------------------------|---------------------------------|\n| **LiveCode Handler (Above)**   | Directly import JSON into a TiddlyWiki widget. | **Programmatic JSON Importing** |\n| **TiddlyWiki Import UI**        | Dragging a JSON file into a running TiddlyWiki. | **Manual Imports**              |\n| **HTML Injection with LiveCode** | Embedding JSON into a `.html` template. | **Creating Full .html Files**    |\n| **TiddlyWiki CLI (Node.js)**    | Exporting a `.html` using CLI tools.    | **Automated Server Exports**     |\n\n---\n\n## ✅ **Best Practices:**\n- **Keep Backups:** Always back up the original TiddlyWiki before importing large JSON datasets.  \n- **Use Valid JSON:** Ensure the exported JSON is properly validated before importing.  \n- **Refresh the UI:** Always call `$tw.rootWidget.refresh()` after a bulk import.  \n\n---\n\n### ✅ **Next Steps:**\n- Would you like help with **batch importing multiple TiddlyWikis**?  \n- Need assistance in **synchronizing multiple instances** using IPFS or other decentralized storage?  \n\nLet me know how you'd like to continue! 😊","title":"Importing Tiddly JSON","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"We aim to create a new form of multimedia Guide - one that can walk you through the process fo installation in a painless way. We imagine the following elements:\n\n1. Awareness of local context - paths etc\n1. Documentation with embedded ActionCode\n1. Levels of automation\n1. TerminalBrowser - using xterm or equivalent\n1. ClickToInstall - button with WikiScript","title":"InstallationGuide","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"There are a range of techniques for installing plugins into TiddlWiki. Our favourite is the drag-and-drop technique from one wiki to another. We wish to extend this with LiveMenu and WikiScript functionality.\n\nhttps://kookma.github.io/TW-Todolist/#Install","title":"Installing Plugins","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"The **LexIcon** is a specialized dictionary for the language of **Lexon**, designed to catalog and define **legal patterns** in a structured and accessible way. It serves as a repository of **legal concepts and rules**, each encoded in Lexon’s constrained programming language to ensure clarity, precision, and accessibility.\n\nEvery entry in the LexIcon explains a legal concept linguistically, represents its **formal structure** as executable code, and visualizes its logic through **iconic diagrams**. These visualizations act as intuitive blueprints, bridging human understanding and computational precision, making complex legal patterns comprehensible and actionable.\n\n### **A Pillar of the Legal Commons**\nThe LexIcon is more than a dictionary — it is a central pillar of the [[Legal Commons]], a new formalization of an open-source **pattern language for human-centered agreements**. This initiative seeks to democratize access to legal frameworks by providing an accessible, shared foundation for creating, understanding, and evolving laws and agreements that prioritize people and communities. By documenting reusable legal patterns in Lexon, the LexIcon supports the development of transparent, interoperable, and collaborative legal systems.\n\n### **Essence of the LexIcon**\nThe LexIcon encapsulates the core principles of Lexon by integrating:\n- **Linguistic clarity** for human-readable legal text (*lexis*),\n- **Structured rigor** of codified rules (*lex*), and\n- **Graphical representation** of these patterns as intuitive icons (*icon*).\n\nThrough this blend, the LexIcon enables legal professionals, programmers, and systems designers to navigate and operationalize legal frameworks efficiently while contributing to a global, open-source repository of human-centered law. It transforms how legal systems are documented, shared, and evolved, creating a foundation for innovation within the Legal Commons.","title":"LexIcon","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"A LiveBrowser is a custom web browser designed to display-and-run LiveContent. Specifically we mean bu this the ability to:\n\n# Organise LivingDocument's\n# Display interactive models and simulations\n# View non-linear documents\n# Interact with performative code\n\nThis general ability to display, author and iteract with code and other live - that is interactive - components, requires the LiveBrowser to tak an unusual and sophisticated approach to security and privacy. LiveCode is dangerous. It is powerful, but dangerous. The LiveBrowser aims to deliver the power of this form of `code` to human centred and human scale organisations.","title":"LiveBrowser","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-23T22:42:34.289Z","text":"A LiveButton is a [[TiddlyButton]] that uses javascript to call Livecode. It requires a `<$wikiscript message=\"Hello, Livecode!\"/>` thingy.\n\nTiddlyWiki does not directly support inline JavaScript execution via widgets. Instead, JavaScript must either be embedded in a custom plugin or executed via an appropriate API like tm-sendmessage.\n\n! Button\nExamples:\n\n<$button>\n  Wikiscript with Junk\n  <$wikiscript message=\"ldfsjkdfsj 9823582957 lafjhasfdlj!\"/>\n</$button>\n\n<$button>\n  Wikiscript with Hello\n  <$wikiscript message=\"Hello, Livecode!\"/>\n</$button>\n\n<$button>\n  Wikiscript no Message\n  <$wikiscript/>\n</$button>","title":"LiveButton","modified":"2025-01-23T23:04:23.366Z","tags":["Hitchhikers","LiveCode"]},{"created":"2025-01-01T00:00:00.000Z","text":"We are feeling our way towards an integration of TiddlyWiki and LiveCode for the purpose of creating the new [[Guide Format]]. THe following principles seem to hold:\n\n# Leverage previous work by reimplmenting the structures but using TiddlyWiki as a [[Literate Database]] for the [[Guide Structure]].\n# Use [[TiddlyWiki Features]] for authoring templates\n# Use Livecode for [[Application Menus]] and [[Operating System Tools]\n# Implement WasmTransporter's","title":"LiveCode Integration","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"TiddlyWiki stores eveeything within itself. A [[monad]] is self-sufficient. However the browser will display state without this necessarily being reflected in the TiddlyWiki file until it is saved. \n\n# Questions\nTiddlyWiki will use local storage to store changes by default (I believe). Here we explore how such local storage works with TiddlyWiki in the context of Livecodes use of an embedded browser widget.\n\n# Blob Urls\nIt seesm that saving wiki using the [[red save button]] creates a new [[Blob URL]] on each save. It is not clear whether the ealier blob urls are deleted, or they simply hang around. See [[Garbage Collection]]. ","title":"Local Storage","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"We need a new word for [[Law]]. LoRe is a working title - a space which allows us to imagine, debate. Create. ReLoad. ReGovern. AdLib. Our new law is based on human centred chimera, yet as with any spirit structured in a way that it is able to channel and direct energy.","title":"LoRe","modified":"2025-01-01T00:00:00.000Z"},{"title":"Module","text":"- [[Global   TiddlyWiki   Menu]]\n- [[Global   TiddlyWiki   Dev   Menu]]\n- [[View TiddlyWiki]]\n- [[behavior_ViewTiddlyWiki|behavior_ViewTiddlyWiki]]\n","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"A ''Monad'' is a socialised Tiddler or TiddlyWiki. It is a SelfContained SingleFileFormat designed to stand the TestOfTime. It is structured out of components that can be packaged in a SocialStandard compliant format.\n\n! See also\n* [[What is a Guide?]]","title":"Monad","modified":"2025-01-23T12:00:36.656Z"},{"created":"2025-01-01T00:00:00.000Z","text":"This messsage is sent to the browser widget when a user presses the [[Save changes button]].","title":"on browserUnhandledLoadRequest","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"LiterateCode is more than simply code you can read. It is a full multimedia experience. You can imagine it as a digital representation of a meme, or the DNA of a meme. These entities have stories, imagery, sounds and interact with other PagesThatRun.\n\nA wiki page is an ideal structure for such an entity. The fluidity of the medium, can be used to refine and eventually define the concepts. Software can interact with the data-structures, free form text, and media as well as the [[LoRe]]. We find ourselves able to execute a page, where the page is a literate description of the code, and the code is an evolving interpretation fo the description.","title":"Pages that Run","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Each page has a name - which we expect to be it's [[URI]] as if were to be served up by a PermanentWiki. We imagine this as a rest service for a federated wiki style wiki page - serving PageJson - both in-and-out - that is the uri's refer to both the wiki-page and a set of restful json-rpc calls.\n\n# Sandboxed Functions\nFrom a security perspective we imagine, a class of restful service which is restricted to processing PageJson.\n\n# Installation Guides\nPages can also execute dangerous code. They have the ability to help with the installation of software on your machine. As such we expect to create InstallationGuide's that are transparent clear, but also empower authors to install the software they need.","title":"PagesThatRun","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"We aim to build in first class project management into the functioning of the TiddlyMonad. This is the core function with regard to the central aspect of incentivising the taking of action over simple description.","title":"ProjectManagement","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"This is our Aim. Our Objective. It is a (living) process, not an End.","title":"ReGovern","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Here we aim to describe the current roadmap for this module:\n\n* [[Wiki Interoperability]] and WikiSyntax.\n* [[Static Site Publishing]]\n* [[Tiddly Mobile]] and [[Tiddly Desktop]]\n* [[Workflows]] and [[Project Management]]","title":"Roadmap","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"One of the most annoying things is to loose text that you have written. Fortunately TiddlyWiki has several ways to save it's text, and when layered and supported by well desinged tooling we can ensure that an authors text is treated with respect.\n\n* [[Red Save Button]]\n* [[Local Storage]]\n* [[Flaky Saving]]\n* Saving in Layers\n* History and Version Control\n* [[Anarchive]] and the Permanent Archive\n* [[Importing Tiddly JSON]]","title":"Saving Text","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"This handler sets the text and [[Content Type]] of a named tiddler - creating a new tiddler if it does not exist.\n\n`\nsetprop tiddler_Markdown [pTitle] sContent\n   if pTitle is empty then put the ticks into pTitle\n   \n   # Ensure safe JavaScript string handling but reserve line breaks\n   _Normalize sContent\n   \n   set the tiddler_RawMarkdown [pTitle] of me to sContent\n   put the result into sResult\n   return sResult\nend tiddler_Markdown`\n","title":"setprop tiddler_Markdown","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"We use the formal definition of a SocialStandard in order to structure an open and collaborative practice of sharing specifications which enable humans to construct better institutions. Towards this aim we borrow from the experience of WC3 and the best practice in software specification. We call this workflow [[Document Driven Design]].","title":"Social Standard","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"The formal definition of a [[Social Standard]] is that is is a superset of a WC3 standard that expresses social constructs in an open standardised way. These constructs inlcude the essential elements required to build DigitalInstitution's.","title":"SocialStandard","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"A StackRunner is a minimal LiveCode application that is able to run - that is open and run Livecode stacks, internet content and scripts. It has the full power of LiveCode but without the [[Livecode IDE]].\n\nWe can use this concept to explore an aspect of how we structure a [[Monad]] in the [[federation]] - and that is the dsitinction between [[Content and Tooling]]. A StackRunner is the minimal tooling for a [[Monad]]. It can be swapped out and replaced with alternative tooling written in other languages, or offering augmented features. Our only requirements are that:\n\n# [[Monad]] = TiddlyContent + StackRunner => (produces) [[Monad]]\n# The content is structured as standardised [[Augmented Tiddler Json]]\n# A diversity of StackRunner implementations provides \n# Regular testing and hotswapping of StackRunner's is used to ensure interoperability\n\n! TiddlyWiki StackRunner\nIn TiddlyWiki the StackRunner is structured as a core package of system Tiddlers, sufficient to run a TiddlyWiki. We can delete this core ","title":"StackRunner","modified":"2025-01-01T00:00:00.000Z"},{"title":"test","text":"Hello from Livecode!","type":"text/plain"},{"title":"test-log","text":"Called Livecode with message: Hello, Livecode!","type":"text/plain"},{"created":"2025-01-01T00:00:00.000Z","text":"Here we explore how we can use wiki to create security and therefore also privacy. Our starting point is that most security failures are human failures.\n\n# Techical complexity\nCryptography is philisophically and technically complex. Cryptographers focus on these aspects with much less interest in the human aspects. furthermore most finance flows into this area through experts, open source developers and companies. There is little incentive for designers to provide clear workflows and standardised interfaces.\n\n# Serious Fun\nOur strategy with Tiddly Security is to have some serious fun. We aim to create an environment and vibrant social community that engages with deep security and privacy issues. We seek to combine the openess of wiki, with the capabilities of strong cryptography, and the social intelligence required of good HumanInt.\n\n# See also\n\n- [[Pages that Run]]","title":"Tiddly Security","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"There have historically, been a number of implementations of the concept of creating a server for TiddlyWiki. These include:\n\n* [[TiddlyWiki on Node.js]]","title":"TiddlyServer","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"A tiddlyWiki is an html file structured as a [[Monad]] or single-file without any dependencies. We use this format to create [[Guides]].","title":"TiddlyWiki","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"https://tiddlywiki-starter-kit.vercel.app/docs/api#tiddlywiki-api\n\n* [[TiddlyWiki Notify API]]\n* [[TiddlyWiki Create API]]\n* [[TiddlyWiki Render API]]\n\n```\nconst wiki = $tw.wiki;\nconst title = 'tiddlywiki-api-tiddler-title';\n\n// json type\nconst dataTiddler = {\n  text: 'random text',\n};\n\n// Get all the information fields of a specific tiddler\nwiki.getTiddler(title).fields;\n\n// Load a JSON-type tiddler as an object\nwiki.getTiddlerData(dataTiddler);\n\n// Get the body content of a specific tiddler, which is essentially the `text` field of the tiddler\nwiki.getTiddlerText(title);\nwiki.getTextReference('!!text', 'defaultText', tiddlerTitle);\nwiki.getCreationFields(); // { \"created\": \"2024-04-03T14:51:03.702Z\", \"creator\": \"oeyoews\" }\n// Equivalent to this way of writing\nwiki.getTiddler(title).fields.text;\n\n// Retrieve tiddlers in bulk based on TiddlyWiki's filter\nwiki.filterTiddlers('[!is[system]]');\n\n// Directly filter tiddlers by tag\nwiki.getTiddlersWithTag('游戏');\n\n// wip\nwiki.getTiddlersAsJson(title);\n\nconst logger = new $tw.utils.Logger('alert title');\n\n// wip\nwiki.setTiddlerData(title, data, fields, options);\n\n// dom\nwiki.utils.domMaker; // createElement\n\n// https://github.com/Jermolene/TiddlyWiki5/blob/4b56cb42983d4134715eb7fe7b083fdcc04980f0/core/modules/startup/rootwidget.js#L58\n\n// widget\nthis.getVariable('currentTiddler'); // Get the name of the current tiddler\nthis.getVariable('storyTiddler'); // Determine whether it is in the story river\n\n// If the target element does not have a class, you can use this; only supports a single class\n// $tw.utils.addClass(commode, 'font-bold')\n// The ability to style the `class` field of a tiddler comes from this. Aside from that, when writing third-party plugins, this approach doesn’t seem to have much advantage over `className`. Using the `classList` method is more recommended.\nexports.addClass = function (el, className) {\n  var c = (el.getAttribute('class') || '').split(' ');\n  if (c.indexOf(className) === -1) {\n    c.push(className);\n    el.setAttribute('class', c.join(' '));\n  }\n};\n\n// Not commonly used\n// Remove a class\nexports.removeClass = function (el, className) {\n  var c = (el.getAttribute('class') || '').split(' '),\n    p = c.indexOf(className);\n  if (p !== -1) {\n    c.splice(p, 1);\n    el.setAttribute('class', c.join(' '));\n  }\n};\n\n// Not commonly used\n// Toggle a class\nexports.toggleClass = function (el, className, status) {\n  if (status === undefined) {\n    status = !exports.hasClass(el, className);\n  }\n  if (status) {\n    exports.addClass(el, className);\n  } else {\n    exports.removeClass(el, className);\n  }\n};\n\n// TiddlyWiki wraps the widget you write inside two functions. You can see the outermost layer includes `tw`, `require`, `console`, `exports`, `module`, etc. This is why you can use `require` with TiddlyWiki.\n(function (\n  module,\n  exports,\n  console,\n  setInterval,\n  clearInterval,\n  setTimeout,\n  clearTimeout,\n  Buffer,\n  $tw,\n  require,\n) {\n  (function () {\n    /*\\\ntitle: nprogress/startup.js\ntype: application/javascript\nmodule-type: startup\n\nnprogress module\n\n\\*/\n    (function () {\n      /*jslint node: true, browser: true */\n      /*global $tw: false */\n      'use strict';\n\n      exports.name = 'nprogress-startup-hook';\n      exports.platforms = ['browser'];\n      exports.after = ['load-modules'];\n      exports.synchronous = true;\n      exports.startup = xxx;\n    })();\n  })();\n\n  return exports;\n});\n\n//# sourceURL=nprogress/startup.js\n\n// Assignment method. You can also directly use `navigator.clipboard()`. However, TiddlyWiki mainly considers using ES5 for better compatibility, so it is recommended to use the built-in copy API.\n$tw.utils.copyToClipboard();\n\n// ???\n$tw.rootWidget.invokeAction('');\n$tw.rootWidget.invokeActionString();\n$tw.renameTiddler('original', 'newtitle', options);\n\n/*\\\ntitle: $:/plugins/oeyoews/image-observer/test.js\ntype: application/javascript\nmodule-type: utils\n\n@usage: $tw.utils.sayHi()\n\n\\*/\n\nexports.sayHi = () => {\n  console.log('Hello, Tiddlywiki');\n};\n\n$tw.wiki.getModificationFields();\n\n\n```\n","title":"TiddlyWiki API","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Some javascript for adding and removing Tiddlers:\n\n\n```\n// Programmatic approach: Add a new tiddler\nwiki.addTiddler({\n  title: 'new tiddler',\n  text: 'random text',\n});\n\n// Delete a specific tiddler\nwiki.deleteTiddler(title);\n\n// Update the `text` of a specific tiddler\nwiki.setText(title, 'text', null, 'random text', {\n  suppressTimestamp: true, // Do not update the timestamp, defaults to `false` (update the timestamp)\n});\n\n```\n","title":"TiddlyWiki Create API","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"TiddlyWiki is great for:\n\n* [[Compositing Complexity]]\n* Creating [[HTML Snippet]]s and [[Javascript Fragment]]'s\n* [[Literate Code]]\n* [[Timeless Archiving]]\n\n!Future\nWe should organise these into a library of [[Earth Component]]s, and use them to store definitions of microservices, menu tools in a range of languages that we can compile to wasm. TiddlyWiki is great at documenting, organising and storing these snippets of code.\n\n!See also\n* LiveBrowser","title":"TiddlyWiki Features","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Here is some code form [[TiddlyWiki API]]:\n\n```\n// Similar to `window.alert`\nlogger.alert('xxx');\n\n// Display a notification\nwiki.notifier.display(title); // send notification\n\n// Show a dialog\n$tw.modal.display(title); // show a dialog\n\n// wip\n$tw.syncer.logger.alert('alert');\n\n```\n","title":"TiddlyWiki Notify API","modified":"2025-01-01T00:00:00.000Z"},{"title":"TiddlyWiki on Node.js","created":"2013-01-01T00:00:00.000Z","modified":"2022-01-01T00:00:00.000Z","type":"text/vnd.tiddlywiki","text":"\\rules except wikilink\n\nRunning TiddlyWiki on [[Node.js]] brings several important benefits over and above the single file version:\n\n* Individual tiddlers are stored in separate files, which you can organise as you wish\n\n* The ability to build multiple wikis that blend different combinations of shared and unique content\n\n* You can edit your content on any modern browser, including smartphones and tablets\n\n\n<<.warning \"\"\"Note that TiddlyWiki on Node.js doesn't currently support directly modifying the tiddler files via the file system while it is running. The server must be restarted in order to for changes to take effect. The recommended way to interact with a running wiki is via the HTTP or JavaScript APIs.\"\"\">>\n\nFor more information see:\n\n<<list-links \"[tag[TiddlyWiki on Node.js]]\">>\n"},{"created":"2025-01-01T00:00:00.000Z","text":"Some javascript to render Tiddlers:\n\n\n```\ncommand render_Tiddler pTiddlerName\n   -- JavaScript to render the tiddler\n   put \"var renderedContent = $tw.wiki.renderText('text/html', 'text/vnd.tiddlywiki', $tw.wiki.getTiddlerText('\" & pTiddlerName & \"'), {parseAsInline: true});\" & \\\n       \"liveCode.javascript_Result(renderedContent);\" into sJavascript\n\n   -- Execute the JavaScript in the browser widget\n   do sJavascript in widget \"yourBrowserWidget\"\n\n   -- Get the rendered HTML result\n   put the result into tRenderedHTML\n\n   -- Handle the rendered content\n   if tRenderedHTML is not empty then\n      -- Do something with the rendered HTML (e.g., display it or save it)\n      answer \"Rendered HTML: \" & tRenderedHTML\n   else\n      answer \"Failed to render tiddler: \" & pTiddlerName\n   end if\nend render_Tiddler\n\n```\n\n\n```\n// Render a tiddler; supports Wikitext\nconst icon = $tw.wiki.renderText(\n  'text/html',\n  'text/vnd.tiddlywiki',\n  '<$iconify />',\n  {\n    parseAsInline: true, // no extra tag; note: sometimes there is a render bug, recommend setting this to false\n  },\n);\n\n```\n","title":"TiddlyWiki Render API","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"We look to enhance the Caddy functionality by making it easy to install, and providing out of the box configuration for your project using the power of Livecode. As this has security implications we wish to provide a new form of open social security that we call [[Tiddly Security]] which is our starting point for [[Public Intelligence]].\n<<checklist mode:\"sort\">>\n\n@@.todo\n[x] LiveButton\n[ ] [[Mermaid Plugin]]\n[ ] [[Github Saving]]\n[ ] [[Custom Url Links]]\n[ ] [[ProjectManagement]]\n[ ] [[Svg Buttons]]\n[ ]  Add [[Mac Mini Server]]\n[ ] Fix close caddy bug\n[ ] Manage [[Brew Install]] and [[Brew Startup Managment]]\n@@\n\nFor a more powerful way to do Todo lists (with drag reordering of items) see [[Reorder Todo List Items]]. In the near term we aim to implement: ProjectManagment","title":"Todo","modified":"2025-01-23T22:35:01.831Z","type":"text/vnd.tiddlywiki"},{"created":"2025-01-01T00:00:00.000Z","text":"","title":"View TiddlyWiki","type":"text/markdown","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-20T21:02:54.104Z","text":"A ''Guide'' for our purposes is document that \"gives guidance\". By this we mean it is more than a simple description. It helps us act. It differs in other ways from a classic descriptinve or informative text - in that it is opinionated - that is is takes a perspective from the point of view of an individual or group of individuals (institution) and expects to be part of an ecosystem of many such opinions. It is therefore designed and structured to be human centred, where teh connection to the author is paramount. This has many consequences.\n\nA [[Guide]] is new form of document that differs fundamentally from any of the forms that we are familiar with - even though it is based on many such forms that have come before.\n\n<<presenter tag:\"Guide\" footer:\"Tamasha Tutorial | Winter 2021\" animation:slidedown template:nolink theme:homa>>","tags":["Guide"],"title":"What is a Guide?","modified":"2025-01-23T12:07:18.212Z"},{"created":"2025-01-01T00:00:00.000Z","text":"A core function of this project is to establish a resilient form of interpoperability between related wiki projects. There are two aspects to this:\n\n# [[Technical Interoperability]] between wikis\n# [[Social Interoperability]] between people and projects\n\nThis combination of social and technical interoperabilty is at the core of a succesful standards process. We aim to formalise this social process as a DigitalInstitution.","title":"Wiki Interoperability","modified":"2025-01-01T00:00:00.000Z"},{"title":"Wikis with Readme","text":"- [[View Org Association]]\n- [[View Index Simple]]\n- [[View TiddlyWiki]]\n- [[lcw_Project|lcw_Project]]\n- [[lcw_Display|lcw_Display]]\n- [[lcw_Caddy|lcw_Caddy]]\n- [[lcw_Wiki|lcw_Wiki]]\n- [[lcw_GIT|lcw_GIT]]\n- [[lcw_Tools|lcw_Tools]]\n- lcw\n- [[lcw_P2P|lcw_P2P]]\n","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"**WikiScript** refers to a scripting language or framework designed to extend the functionality and interactivity of wikis. It should be a LiterateLanguage used within a wiki platform to enable advanced customization, dynamic content generation, and automation of tasks. It allows users to go beyond static text and hyperlinks by introducing programmable logic, interactivity, and integration with external systems.\n\n### **Features of a WikiScript**\nA modern WikiScript might include:\n- **Human-Readable Syntax**: Easy for non-programmers to use.\n- **Integration with Wiki Markup**: Seamless embedding within wiki text or templates.\n- **Event Handling**: Responding to user actions like clicking, editing, or navigating.\n- **Data Handling**: Fetching, manipulating, and displaying data from internal or external sources.\n- **Security and Permissions**: Ensuring scripts operate within defined boundaries to protect content integrity.\n\n### **Conceptual Framework**\nWe imagine WikiScript to be a **generalized scripting framework for wikis**, offering a unified way to:\n- Write scripts that work across multiple wiki platforms.\n- Combine scripting with federated systems for decentralized collaboration.\n- Embed interactive components or workflows into collaborative documents.","title":"WikiScript","modified":"2025-01-01T00:00:00.000Z","type":"text/markdown"},{"created":"2025-01-01T00:00:00.000Z","text":"We aim to standardise a collaborative practice that uses [[wiki]] to express the process of elaborating the structure of SocialCode. We lean on the ideas expresssed in WikiText, [[Apostrophe]] and CamelCase - extending these to the collabroative practice of writing in wiki with the aim of structuring complex applications. Our particular interest is to provide a language and assiated set of tooling that empowers people to create robust, tested, and rich DigitalInstitution's.\n\nWe have the idea here that a wiki-page can become code - the ultimate form of LiterateLanguage, where a wiki-page can be executed. In many ways this is already the case for TiddlyWiki, but we aim to extend and formalise this practice with regard to creating WasmApi's for PerformativeLanguage's.","title":"WikiSyntax","modified":"2025-01-01T00:00:00.000Z"},{"created":"2025-01-01T00:00:00.000Z","text":"Here are my [[Interstitial notes]]::\n\n<<interstitial tiddler:\"\" showInput:\"\">>\n\n@@.interstitial\n* ''20:39'' Diving into [[LiveCode Integration]]\n* ''20:40'' [[Installing Plugins]] - whats the best way?\n* ''20:40'' [[TiddlyWiki Render API]] and [[TiddlyWiki Notify API]]\n* ''20:41'' [[Tiddly Security]]\n@@","title":"Working on","modified":"2025-01-20T20:42:27.192Z","type":"text/vnd.tiddlywiki"}]